{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\CountryCard.svelte",
    "..\\..\\CountryList.svelte",
    "..\\..\\WorldCard.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport CountryList from \"./components/CountryList.svelte\";\r\nimport WorldCard from \"./components/WorldCard.svelte\";\r\nconst ALL_COUNTRIES_URL = \"https://coronavirus-19-api.herokuapp.com/countries\";\r\nconst WORLD_URL = \"https://coronavirus-19-api.herokuapp.com/all\";\r\nlet isDark = false;\r\nlet countryName = \"\";\r\nlet countries = [];\r\nlet worldInfo = {};\r\nconst fetchAllCountries = (url) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const response = yield fetch(url, {\r\n        method: \"GET\",\r\n    });\r\n    const countries = yield response.json();\r\n    countries.shift();\r\n    return countries;\r\n});\r\nconst fetchOneCountryByName = (url) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const response = yield fetch(url, {\r\n        method: \"GET\",\r\n    });\r\n    return yield response.json();\r\n});\r\nconst fetchWorldInformation = (url) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const response = yield fetch(url, {\r\n        method: \"GET\",\r\n    });\r\n    return yield response.json();\r\n});\r\nconst fetchAndLoadOneCountryByName = (countryName) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const countryResult = yield fetchOneCountryByName(`${ALL_COUNTRIES_URL}/${countryName}`);\r\n    countries = [countryResult];\r\n});\r\nconst fetchAndLoadAllCountries = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const countriesResult = yield fetchAllCountries(ALL_COUNTRIES_URL);\r\n    countries = countriesResult;\r\n});\r\nconst fetchAndLoadWorldInfo = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const worldInfoResponse = yield fetchWorldInformation(WORLD_URL);\r\n    worldInfo = worldInfoResponse;\r\n});\r\nconst loadData = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    fetchAndLoadAllCountries();\r\n    fetchAndLoadWorldInfo();\r\n});\r\nconst onKeyPressHandler = (event) => {\r\n    const keyCode = event.keyCode;\r\n    if (keyCode === 13) {\r\n        fetchAndLoadOneCountryByName(countryName);\r\n    }\r\n};\r\nconst onKeyUpHandler = (event) => {\r\n    if (countryName === \"\") {\r\n        fetchAndLoadAllCountries();\r\n    }\r\n};\r\nloadData();\r\n// countries = [{}];\r\n</script>\n\n<style>\n  main {\n    height: auto;\n    padding: 0 22px;\n    background-color: #ffffff;\n\n    display: flex;\n    flex-flow: column nowrap;\n  }\n  main.dark {\n    background-color: #18191a;\n  }\n\n  .country-name {\n    margin: 24px 0;\n    padding: 8px 12px;\n    border: none;\n    border-bottom: 2px solid black;\n\n    font-size: 22px;\n    align-self: center;\n  }\n  .country-name:focus {\n    outline: none;\n  }\n  main.dark .country-name {\n    background-color: #747474;\n    color: #eeeeee;\n  }\n  main.dark .country-name::placeholder {\n    color: #eeeeee;\n  }\n</style>\n\n<main class={isDark ? 'dark' : ''}>\n  <input type=\"checkbox\" bind:checked={isDark} />\n\n  <WorldCard {worldInfo} {isDark} />\n\n  <input\n    class=\"country-name\"\n    type=\"text\"\n    bind:value={countryName}\n    on:keypress={onKeyPressHandler}\n    on:keyup={onKeyUpHandler}\n    placeholder=\"Buscar por paÃ­s...\" />\n\n  <CountryList {countries} {isDark} />\n</main>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport let isDark = false;\r\nexport let country = {};\r\nlet flagUrl = \"\";\r\n$: {\r\n    fetchCountryFlagImageUrl(country.country).then((imageUrl) => {\r\n        flagUrl = imageUrl;\r\n    });\r\n}\r\nconst fetchCountryFlagImageUrl = (countryName) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const url = `https://restcountries.eu/rest/v2/name/${countryName}`;\r\n    const response = yield fetch(url, { method: \"GET\" });\r\n    const jsonResponse = yield response.json();\r\n    return jsonResponse[0].flag;\r\n});\r\n</script>\n\n<style>\n\t.container {\n\t\tpadding: 48px 0;\n\t\tbackground-color: #eaeaea;\n\n\t\tdisplay: flex;\n\t\tflex-flow: column nowrap;\n\t\talign-items: center;\n\t}\n\n\t.container.dark {\n\t\tbackground-color: #474747;\n\t}\n\n\t.container img {\n\t\tmargin-bottom: 12px;\n\t\twidth: 150px;\n\t\theight: 100px;\n\t}\n\n\t.container h1 {\n\t\tfont-size: 28px;\n\t}\n\t.container.dark h1 {\n\t\tcolor: #eeeeee;\n\t}\n\n\t.container p {\n\t\tfont-size: 20px;\n\t}\n\t.container.dark p {\n\t\tcolor: #eeeeee;\n\t}\n</style>\n\n<div class=\"container {isDark ? 'dark' : ''}\">\n\t<img src={flagUrl} alt=\"country flag\" />\n\t<h1>{country.country}</h1>\n\t<p>Total de casos: {country.cases}</p>\n\t<p>Total de muertes: {country.deaths}</p>\n\t<p>Total de recuperados: {country.recovered}</p>\n</div>\n",
    "<script lang=\"ts\">import CountryCard from \"./CountryCard.svelte\";\r\nexport let isDark = false;\r\nexport let countries = [];\r\n</script>\n\n<style>\n\t.container {\n\t\tdisplay: grid;\n\t\tgap: 20px;\n\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n\t}\n</style>\n\n<main class=\"container\">\n\t{#each countries as country (country.country)}\n\t\t<CountryCard {country} {isDark} />\n\t{/each}\n</main>\n",
    "<script lang=\"ts\">export let isDark = true;\r\nexport let worldInfo = {\r\n    cases: 0,\r\n    deaths: 0,\r\n    recovered: 0,\r\n};\r\n</script>\n\n<style>\n\t.container {\n\t\tpadding: 24px 0;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(3, 1fr);\n\n\t\tbackground-color: #34495e;\n\t}\n\t.container.dark {\n\t\tbackground-color: #302f2f;\n\t}\n\n\t.container .group {\n\t\tdisplay: flex;\n\t\tflex-flow: column nowrap;\n\t\talign-items: center;\n\t}\n\n\t.container .group img {\n\t\twidth: 70px;\n\t\theight: 70px;\n\t}\n\n\t.container .group p {\n\t\tcolor: #eeeeee;\n\t\tfont-size: 22px;\n\t}\n\n\t@media only screen and (max-width: 600px) {\n\t\t.container {\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgrid-template-rows: repeat(3, 1fr);\n\t\t}\n\t\t.container .group {\n\t\t\tmargin-bottom: 28px;\n\t\t}\n\t}\n</style>\n\n<div class=\"container {isDark ? 'dark' : ''}\">\n\t<div class=\"group\">\n\t\t<img src=\"/assets/totalcases.png\" alt=\"Casos totales\" />\n\t\t<p>Total de casos</p>\n\t\t<p>{worldInfo.cases}</p>\n\t</div>\n\n\t<div class=\"group\">\n\t\t<img src=\"/assets/deaths.png\" alt=\"Casos totales\" />\n\t\t<p>Total de Muertes</p>\n\t\t<p>{worldInfo.deaths}</p>\n\t</div>\n\n\t<div class=\"group\">\n\t\t<img src=\"/assets/recovered.png\" alt=\"Casos totales\" />\n\t\t<p>Total de Recuperados</p>\n\t\t<p>{worldInfo.recovered}</p>\n\t</div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}